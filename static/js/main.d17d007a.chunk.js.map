{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["ContactForm","addContact","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","reset","className","onSubmit","preventDefault","type","onChange","pattern","title","required","Filter","filter","Contact","id","onDelete","onClick","ContactList","filteredContacts","filtered","map","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","newName","duplicateName","some","contact","uuidv4","alert","prevContacts","contactId","prevState","normalizedFilterName","toLowerCase","trim","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d17d007a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './ContactForm.scss';\r\n\r\nexport function ContactForm({ addContact }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch(name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break; \r\n\r\n      default:\r\n        return;\r\n    };\r\n  };\r\n\r\n  const formSubmit = (e) => {\r\n    e.preventDefault();\r\n    addContact(name, number);\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className=\"Phonebook-form\" onSubmit={formSubmit}>         \r\n      <label className=\"Phonebook__label\">\r\n        Name:<br></br><input\r\n          className=\"Phonebook__input\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          onChange={handleChange}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Ім'я може складатись тільки з букв, апострофа, тире і пробілів. Наприклад Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan і т. п.\"\r\n          required\r\n        />\r\n      </label> \r\n      <label className=\"Phonebook__label\">\r\n        Number:<br></br><input\r\n          className=\"Phonebook__input\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Телефон повинен складатись з цифр і може містити пробіли, тире, круглі скобки і може починатися з + .\"\r\n          required\r\n        />\r\n      </label>\r\n      <button className=\"Phonebook__button\" type=\"submit\" >Add contact</button>\r\n    </form>\r\n  );\r\n};","import './Filter.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <label className=\"Filter__label\">\r\n      Find contacts by name:<br></br><input\r\n        className=\"Filter__input\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </label> \r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  onChange: PropTypes.func.isRequired,\r\n}","import './Contact.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Contact = (({ name, number, id, onDelete }) => <li className=\"Contacts__item\">\r\n    <p className=\"Contacts__text\">{name} : {number}</p>\r\n    <button onClick={() => onDelete(id)} className=\"Contacts__button\">Delete</button>\r\n  </li>)\r\n\r\nexport default Contact;\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n}","import Contact from 'components/Contact';\r\nimport './ContactList.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ContactList = ({ filteredContacts, onDelete }) => {\r\n  const filtered = filteredContacts();\r\n  return (\r\n    <ul className=\"Contacts-list\">\r\n      {filtered.map( ({ id, name, number }) => {\r\n        return (\r\n          <Contact key={id} id={id} name={name} number={number} onDelete={onDelete}/> \r\n        )})        \r\n      }  \r\n    </ul>\r\n  )\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  filteredContacts: PropTypes.func.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\n// Components //\nimport { ContactForm }  from 'components/ContactForm';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport PropTypes from 'prop-types';\n\nimport { v4 as uuidv4 } from 'uuid'; \n\n\nexport function App() {\n  const [contacts, setContacts] = useState(\n    JSON.parse(window.localStorage.getItem('contacts')) ?? [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => window.localStorage.setItem('contacts', JSON.stringify(contacts)),[contacts])\n\n  const addContact = ( newName, number) => {\n    const duplicateName = contacts.some( ({ name }) => newName === name)\n\n    const contact = {\n      id: uuidv4(),\n      name: newName, \n      number,\n    };\n\n    duplicateName \n      ? alert(`${newName} is already in contacts`)\n      : setContacts( prevContacts => [contact, ...prevContacts]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts( prevState => prevState.filter( ({ id }) => id !== contactId) )\n  };\n\n  const handleChange = (e) => {\n    const {value} = e.currentTarget;  \n    setFilter(value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilterName = filter.toLowerCase().trim();\n    return contacts.filter( ({ name }) => name.toLowerCase().includes(normalizedFilterName));\n  };\n\n    return (      \n      <div className=\"App\">\n        <h1 className=\"Phonebook-title\">Phonebook</h1>\n        <ContactForm addContact={ addContact } />\n        <h2>Contacts</h2>\n        <Filter onChange={ handleChange } filter={ filter } />\n        <ContactList onDelete={ deleteContact } filteredContacts={ getVisibleContacts } />\n      </div>\n    )\n};\n\nApp.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape()),\n  filter: PropTypes.string,\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}